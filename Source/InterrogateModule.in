1409312180
2 2
3 LUI 4 jJ0G 3 LUI 
21
26 9 LUISprite 0 4 47 20 LUISprite::LUISprite 0 1 1 0
27
LUISprite::LUISprite(void);

27 7 set_pos 0 4 47 18 LUISprite::set_pos 0 2 2 3 38
// Setter / Getter

// Setter / Getter
102
inline void LUISprite::set_pos(LPoint2f const &pos);
inline void LUISprite::set_pos(float x, float y);

28 7 get_pos 0 4 47 18 LUISprite::get_pos 0 1 4 0
41
inline LPoint2f LUISprite::get_pos(void);

29 8 set_size 0 4 47 19 LUISprite::set_size 0 2 5 6 0
106
inline void LUISprite::set_size(LVector2f const &size);
inline void LUISprite::set_size(float x, float y);

30 8 get_size 0 4 47 19 LUISprite::get_size 0 1 7 0
56
inline LVector2f const &LUISprite::get_size(void) const;

31 18 set_texcoord_start 0 4 47 29 LUISprite::set_texcoord_start 0 2 8 9 0
136
inline void LUISprite::set_texcoord_start(LVector2f const &texcoord_start);
inline void LUISprite::set_texcoord_start(float u, float v);

32 18 get_texcoord_start 0 4 47 29 LUISprite::get_texcoord_start 0 1 10 0
53
inline LVector2f LUISprite::get_texcoord_start(void);

33 16 set_texcoord_end 0 4 47 27 LUISprite::set_texcoord_end 0 2 11 12 0
130
inline void LUISprite::set_texcoord_end(LVector2f const &texcoord_end);
inline void LUISprite::set_texcoord_end(float u, float v);

34 16 get_texcoord_end 0 4 47 27 LUISprite::get_texcoord_end 0 1 13 0
51
inline LVector2f LUISprite::get_texcoord_end(void);

35 9 set_color 0 4 47 20 LUISprite::set_color 0 2 14 15 0
128
inline void LUISprite::set_color(LVecBase4f const &color);
inline void LUISprite::set_color(float r, float g, float b, float a);

36 9 get_color 0 4 47 20 LUISprite::get_color 0 1 16 0
45
inline LVecBase4f LUISprite::get_color(void);

37 11 set_texture 0 4 47 22 LUISprite::set_texture 0 1 17 0
49
inline void LUISprite::set_texture(Texture *tex);

38 11 get_texture 0 4 47 22 LUISprite::get_texture 0 1 18 0
51
inline Texture *LUISprite::get_texture(void) const;

39 11 set_z_index 0 4 47 22 LUISprite::set_z_index 0 1 19 0
50
inline void LUISprite::set_z_index(float z_index);

40 11 get_z_index 0 4 47 22 LUISprite::get_z_index 0 1 20 0
42
inline float LUISprite::get_z_index(void);

41 11 set_visible 0 4 47 22 LUISprite::set_visible 0 1 21 0
49
inline void LUISprite::set_visible(bool visible);

42 10 is_visible 0 4 47 21 LUISprite::is_visible 0 1 22 0
40
inline bool LUISprite::is_visible(void);

43 4 hide 0 4 47 15 LUISprite::hide 0 1 23 28
// Shortcuts for set_visible
34
inline void LUISprite::hide(void);

44 4 show 0 4 47 15 LUISprite::show 0 1 24 28
// Shortcuts for set_visible
34
inline void LUISprite::show(void);

45 7 LUIRoot 0 4 49 16 LUIRoot::LUIRoot 0 1 25 0
23
LUIRoot::LUIRoot(void);

46 8 ~LUIRoot 0 4 49 17 LUIRoot::~LUIRoot 0 0 0
24
LUIRoot::~LUIRoot(void);

25
1 14 Dtool_jJ0G0beO 0 7 3 50 0 14 Dtool_jJ0G0beO 0 0 
2 14 Dtool_jJ0GTnVb 0 4 4 54 0 14 Dtool_jJ0GTnVb 18 // Setter / Getter 2 4 this 3 50  3 pos 1 51  
3 14 Dtool_jJ0GAvgp 0 4 4 54 0 14 Dtool_jJ0GAvgp 18 // Setter / Getter 3 4 this 3 50  1 x 1 55  1 y 1 55  
4 14 Dtool_jJ0Gs6Ij 0 7 5 56 0 14 Dtool_jJ0Gs6Ij 0 1 4 this 3 50  
5 14 Dtool_jJ0GDSuu 0 4 6 54 0 14 Dtool_jJ0GDSuu 0 2 4 this 3 50  4 size 1 57  
6 14 Dtool_jJ0G8DXk 0 4 6 54 0 14 Dtool_jJ0G8DXk 0 3 4 this 3 50  1 x 1 55  1 y 1 55  
7 14 Dtool_jJ0G_Emi 0 6 7 57 0 14 Dtool_jJ0G_Emi 0 1 4 this 3 60  
8 14 Dtool_jJ0GZPqC 0 4 8 54 0 14 Dtool_jJ0GZPqC 0 2 4 this 3 50  14 texcoord_start 1 57  
9 14 Dtool_jJ0GN_OZ 0 4 8 54 0 14 Dtool_jJ0GN_OZ 0 3 4 this 3 50  1 u 1 55  1 v 1 55  
10 14 Dtool_jJ0Gmg_s 0 7 9 62 0 14 Dtool_jJ0Gmg_s 0 1 4 this 3 50  
11 14 Dtool_jJ0G1aLq 0 4 10 54 0 14 Dtool_jJ0G1aLq 0 2 4 this 3 50  12 texcoord_end 1 57  
12 14 Dtool_jJ0Gpyol 0 4 10 54 0 14 Dtool_jJ0Gpyol 0 3 4 this 3 50  1 u 1 55  1 v 1 55  
13 14 Dtool_jJ0GbKPb 0 7 11 62 0 14 Dtool_jJ0GbKPb 0 1 4 this 3 50  
14 14 Dtool_jJ0GjsUJ 0 4 12 54 0 14 Dtool_jJ0GjsUJ 0 2 4 this 3 50  5 color 1 63  
15 14 Dtool_jJ0G0obL 0 4 12 54 0 14 Dtool_jJ0G0obL 0 5 4 this 3 50  1 r 1 55  1 g 1 55  1 b 1 55  1 a 1 55  
16 14 Dtool_jJ0GZ92J 0 7 13 66 0 14 Dtool_jJ0GZ92J 0 1 4 this 3 50  
17 14 Dtool_jJ0GBbSG 0 4 14 54 0 14 Dtool_jJ0GBbSG 0 2 4 this 3 50  3 tex 1 67  
18 14 Dtool_jJ0GAHju 0 7 15 67 0 14 Dtool_jJ0GAHju 0 1 4 this 3 60  
19 14 Dtool_jJ0G0CvJ 0 4 16 54 0 14 Dtool_jJ0G0CvJ 0 2 4 this 3 50  7 z_index 1 55  
20 14 Dtool_jJ0GQj7I 0 6 17 55 0 14 Dtool_jJ0GQj7I 0 1 4 this 3 50  
21 14 Dtool_jJ0Gzi7K 0 4 18 54 0 14 Dtool_jJ0Gzi7K 0 2 4 this 3 50  7 visible 1 69  
22 14 Dtool_jJ0GCgZS 0 6 19 69 0 14 Dtool_jJ0GCgZS 0 1 4 this 3 50  
23 14 Dtool_jJ0Ga9z_ 0 4 20 54 0 14 Dtool_jJ0Ga9z_ 28 // Shortcuts for set_visible 1 4 this 3 50  
24 14 Dtool_jJ0GYuHT 0 4 21 54 0 14 Dtool_jJ0GYuHT 28 // Shortcuts for set_visible 1 4 this 3 50  
25 14 Dtool_jJ0Gxl7v 0 7 23 70 46 14 Dtool_jJ0Gxl7v 0 0 
24
47 9 LUISprite 0 75777 9 LUISprite 9 LUISprite 0 0 0 1 26 0 0 18 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 0 0 1 0 48 0 0 0 0 0

48 14 ReferenceCount 0 2049 14 ReferenceCount 14 ReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 425
////////////////////////////////////////////////////////////////////
//       Class : ReferenceCount
// Description : A base class for all things that want to be
//               reference-counted.  ReferenceCount works in
//               conjunction with PointerTo to automatically delete
//               objects when the last pointer to them goes away.
////////////////////////////////////////////////////////////////////

49 7 LUIRoot 0 26625 7 LUIRoot 7 LUIRoot 0 0 0 1 45 46 0 0 0 0 0 0 0 0

50 11 LUISprite * 0 8576 11 LUISprite * 11 LUISprite * 0 0 47 0 0 0 0 0 0 0 0 0 0

51 16 LPoint2f const * 0 8576 16 LPoint2f const * 16 LPoint2f const * 0 0 52 0 0 0 0 0 0 0 0 0 0

52 14 LPoint2f const 0 8832 14 LPoint2f const 14 LPoint2f const 0 0 53 0 0 0 0 0 0 0 0 0 0

53 8 LPoint2f 0 2048 8 LPoint2f 8 LPoint2f 0 0 0 0 0 0 0 0 0 0 0 0 706
// Filename: lpoint2_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LPoint2
// Description : This is a two-component point in space.
////////////////////////////////////////////////////////////////////

54 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

55 5 float 0 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

56 10 LPoint2f * 0 8576 10 LPoint2f * 10 LPoint2f * 0 0 53 0 0 0 0 0 0 0 0 0 0

57 17 LVector2f const * 0 8576 17 LVector2f const * 17 LVector2f const * 0 0 58 0 0 0 0 0 0 0 0 0 0

58 15 LVector2f const 0 8832 15 LVector2f const 15 LVector2f const 0 0 59 0 0 0 0 0 0 0 0 0 0

59 9 LVector2f 0 2048 9 LVector2f 9 LVector2f 0 0 0 0 0 0 0 0 0 0 0 0 707
// Filename: lvector2_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVector2
// Description : This is a two-component vector offset.
////////////////////////////////////////////////////////////////////

60 17 LUISprite const * 0 8576 17 LUISprite const * 17 LUISprite const * 0 0 61 0 0 0 0 0 0 0 0 0 0

61 15 LUISprite const 0 8832 15 LUISprite const 15 LUISprite const 0 0 47 0 0 0 0 0 0 0 0 0 0

62 11 LVector2f * 0 8576 11 LVector2f * 11 LVector2f * 0 0 59 0 0 0 0 0 0 0 0 0 0

63 18 LVecBase4f const * 0 8576 18 LVecBase4f const * 18 LVecBase4f const * 0 0 64 0 0 0 0 0 0 0 0 0 0

64 16 LVecBase4f const 0 8832 16 LVecBase4f const 16 LVecBase4f const 0 0 65 0 0 0 0 0 0 0 0 0 0

65 10 LVecBase4f 0 2048 10 LVecBase4f 10 LVecBase4f 0 0 0 0 0 0 0 0 0 0 0 0 265
////////////////////////////////////////////////////////////////////
//       Class : LVecBase4
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

66 12 LVecBase4f * 0 8576 12 LVecBase4f * 12 LVecBase4f * 0 0 65 0 0 0 0 0 0 0 0 0 0

67 9 Texture * 0 8576 9 Texture * 9 Texture * 0 0 68 0 0 0 0 0 0 0 0 0 0

68 7 Texture 0 2048 7 Texture 7 Texture 0 0 0 0 0 0 0 0 0 0 0 0 1051
////////////////////////////////////////////////////////////////////
//       Class : Texture
// Description : Represents a texture object, which is typically a
//               single 2-d image but may also represent a 1-d or 3-d
//               texture image, or the six 2-d faces of a cube map
//               texture.
//
//               A texture's image data might be stored in system RAM
//               (see get_ram_image()) or its image may be represented
//               in texture memory on one or more
//               GraphicsStateGuardians (see prepare()), or both.  The
//               typical usage pattern is that a texture is loaded
//               from an image file on disk, which copies its image
//               data into system RAM; then the first time the texture
//               is rendered its image data is copied to texture
//               memory (actually, to the graphics API), and the
//               system RAM image is automatically freed.
////////////////////////////////////////////////////////////////////

69 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

70 9 LUIRoot * 0 8576 9 LUIRoot * 9 LUIRoot * 0 0 49 0 0 0 0 0 0 0 0 0 0

0
0
0
