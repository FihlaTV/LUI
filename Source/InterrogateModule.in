1409429278
2 2
3 LUI 4 jJ0G 3 LUI 
57
66 8 LUIAtlas 0 4 123 18 LUIAtlas::LUIAtlas 0 1 1 0
25
LUIAtlas::LUIAtlas(void);

67 20 load_descriptor_file 0 4 123 30 LUIAtlas::load_descriptor_file 0 1 2 0
81
bool LUIAtlas::load_descriptor_file(basic_string< char > const &descriptor_path);

68 12 load_texture 0 4 123 22 LUIAtlas::load_texture 0 1 3 0
70
bool LUIAtlas::load_texture(basic_string< char > const &texture_path);

69 11 get_texture 0 4 123 21 LUIAtlas::get_texture 0 1 4 0
44
inline Texture *LUIAtlas::get_texture(void);

70 9 has_entry 0 4 123 19 LUIAtlas::has_entry 0 1 5 0
66
inline bool LUIAtlas::has_entry(basic_string< char > const &name);

71 9 get_entry 0 4 123 19 LUIAtlas::get_entry 0 1 6 0
76
inline LUIAtlasEntry *LUIAtlas::get_entry(basic_string< char > const &name);

72 8 get_size 0 4 123 18 LUIAtlas::get_size 0 1 7 0
36
inline int LUIAtlas::get_size(void);

73 18 LUIAtlasDescriptor 0 4 125 38 LUIAtlasDescriptor::LUIAtlasDescriptor 0 1 8 0
45
LUIAtlasDescriptor::LUIAtlasDescriptor(void);

74 14 LUIAtlasPacker 0 4 126 30 LUIAtlasPacker::LUIAtlasPacker 0 1 9 0
41
LUIAtlasPacker::LUIAtlasPacker(int size);

75 13 find_position 0 4 126 29 LUIAtlasPacker::find_position 0 1 10 0
54
LVector2f LUIAtlasPacker::find_position(int w, int h);

76 14 get_global_ptr 0 4 127 28 LUIAtlasPool::get_global_ptr 0 1 11 0
56
static LUIAtlasPool *LUIAtlasPool::get_global_ptr(void);

77 10 load_atlas 0 4 127 24 LUIAtlasPool::load_atlas 0 1 12 0
157
void LUIAtlasPool::load_atlas(basic_string< char > const &atlas_id, basic_string< char > const &atlas_desc_path, basic_string< char > const &atlas_tex_path);

78 9 has_atlas 0 4 127 23 LUIAtlasPool::has_atlas 0 1 13 0
74
inline bool LUIAtlasPool::has_atlas(basic_string< char > const &atlas_id);

79 9 get_atlas 0 4 127 23 LUIAtlasPool::get_atlas 0 1 14 0
91
inline PointerTo< LUIAtlas > LUIAtlasPool::get_atlas(basic_string< char > const &atlas_id);

80 14 get_descriptor 0 4 127 28 LUIAtlasPool::get_descriptor 0 2 15 16 0
251
inline PointerTo< LUIAtlasDescriptor > LUIAtlasPool::get_descriptor(basic_string< char > const &entry_id);
inline PointerTo< LUIAtlasDescriptor > LUIAtlasPool::get_descriptor(basic_string< char > const &atlas_id, basic_string< char > const &entry_id);

81 15 ~LUIBaseElement 0 4 128 31 LUIBaseElement::~LUIBaseElement 0 0 0
38
LUIBaseElement::~LUIBaseElement(void);

82 12 set_top_left 0 4 128 28 LUIBaseElement::set_top_left 0 1 17 11
// Position
64
inline void LUIBaseElement::set_top_left(float top, float left);

83 7 set_top 0 4 128 23 LUIBaseElement::set_top 0 1 18 11
// Position
47
inline void LUIBaseElement::set_top(float top);

84 10 set_bottom 0 4 128 26 LUIBaseElement::set_bottom 0 1 19 0
53
inline void LUIBaseElement::set_bottom(float bottom);

85 8 set_left 0 4 128 24 LUIBaseElement::set_left 0 1 20 0
49
inline void LUIBaseElement::set_left(float left);

86 9 set_right 0 4 128 25 LUIBaseElement::set_right 0 1 21 0
51
inline void LUIBaseElement::set_right(float right);

87 8 set_size 0 4 128 24 LUIBaseElement::set_size 0 2 22 23 16
// Size

// Size
116
inline void LUIBaseElement::set_size(LVector2f const &size);
inline void LUIBaseElement::set_size(float w, float h);

88 9 set_width 0 4 128 25 LUIBaseElement::set_width 0 1 24 0
47
inline void LUIBaseElement::set_width(float w);

89 10 set_height 0 4 128 26 LUIBaseElement::set_height 0 1 25 0
48
inline void LUIBaseElement::set_height(float h);

90 8 get_size 0 4 128 24 LUIBaseElement::get_size 0 1 26 0
61
inline LVector2f const &LUIBaseElement::get_size(void) const;

91 11 set_visible 0 4 128 27 LUIBaseElement::set_visible 0 1 27 10
// Visible
54
inline void LUIBaseElement::set_visible(bool visible);

92 10 is_visible 0 4 128 26 LUIBaseElement::is_visible 0 1 28 10
// Visible
45
inline bool LUIBaseElement::is_visible(void);

93 4 hide 0 4 128 20 LUIBaseElement::hide 0 1 29 0
39
inline void LUIBaseElement::hide(void);

94 4 show 0 4 128 20 LUIBaseElement::show 0 1 30 0
39
inline void LUIBaseElement::show(void);

95 7 LUINode 0 4 129 16 LUINode::LUINode 0 1 31 0
35
LUINode::LUINode(float w, float h);

96 15 get_atlas_image 0 4 129 24 LUINode::get_atlas_image 0 2 32 33 0
247
inline PointerTo< LUIAtlasDescriptor > LUINode::get_atlas_image(basic_string< char > const &identifier);
inline PointerTo< LUIAtlasDescriptor > LUINode::get_atlas_image(basic_string< char > const &atlas_id, basic_string< char > const &identifier);

97 13 attach_sprite 0 4 129 22 LUINode::attach_sprite 0 3 34 35 36 0
315
inline PointerTo< LUISprite > LUINode::attach_sprite(float x, float y, basic_string< char > const &source);
inline PointerTo< LUISprite > LUINode::attach_sprite(float x, float y, PointerTo< LUIAtlasDescriptor > desc);
inline PointerTo< LUISprite > LUINode::attach_sprite(float x, float y, PointerTo< Texture > tex);

98 13 remove_sprite 0 4 129 22 LUINode::remove_sprite 0 1 37 0
66
inline void LUINode::remove_sprite(PointerTo< LUISprite > sprite);

99 16 get_sprite_count 0 4 129 25 LUINode::get_sprite_count 0 1 38 0
43
inline int LUINode::get_sprite_count(void);

100 10 get_sprite 0 4 129 19 LUINode::get_sprite 0 1 39 0
57
inline PointerTo< LUISprite > LUINode::get_sprite(int n);

101 8 get_size 0 4 129 17 LUINode::get_size 0 1 40 0
54
inline LVector2f const &LUINode::get_size(void) const;

102 8 set_size 0 4 129 17 LUINode::set_size 0 2 41 42 0
102
inline void LUINode::set_size(LVector2f const &size);
inline void LUINode::set_size(float w, float h);

103 11 operator += 0 4 129 20 LUINode::operator += 0 1 43 0
53
void LUINode::operator +=(PointerTo< LUINode > node);

104 24 upcast_to_ReferenceCount 0 12 130 35 LUISprite::upcast_to_ReferenceCount 0 1 59 39
upcast from LUISprite to ReferenceCount
58
ReferenceCount *LUISprite::upcast_to_ReferenceCount(void);

105 21 downcast_to_LUISprite 0 12 124 37 ReferenceCount::downcast_to_LUISprite 0 1 60 41
downcast from ReferenceCount to LUISprite
55
LUISprite *ReferenceCount::downcast_to_LUISprite(void);

106 24 upcast_to_LUIBaseElement 0 12 130 35 LUISprite::upcast_to_LUIBaseElement 0 1 61 39
upcast from LUISprite to LUIBaseElement
58
LUIBaseElement *LUISprite::upcast_to_LUIBaseElement(void);

107 21 downcast_to_LUISprite 0 12 128 37 LUIBaseElement::downcast_to_LUISprite 0 1 62 41
downcast from LUIBaseElement to LUISprite
55
LUISprite *LUIBaseElement::downcast_to_LUISprite(void);

108 18 set_texcoord_start 0 4 130 29 LUISprite::set_texcoord_start 0 2 44 45 24
// Texcoord

// Texcoord
136
inline void LUISprite::set_texcoord_start(LVector2f const &texcoord_start);
inline void LUISprite::set_texcoord_start(float u, float v);

109 18 get_texcoord_start 0 4 130 29 LUISprite::get_texcoord_start 0 1 46 0
53
inline LVector2f LUISprite::get_texcoord_start(void);

110 16 set_texcoord_end 0 4 130 27 LUISprite::set_texcoord_end 0 2 47 48 0
130
inline void LUISprite::set_texcoord_end(LVector2f const &texcoord_end);
inline void LUISprite::set_texcoord_end(float u, float v);

111 16 get_texcoord_end 0 4 130 27 LUISprite::get_texcoord_end 0 1 49 0
51
inline LVector2f LUISprite::get_texcoord_end(void);

112 9 set_color 0 4 130 20 LUISprite::set_color 0 2 50 51 18
// Color

// Color
128
inline void LUISprite::set_color(LVecBase4f const &color);
inline void LUISprite::set_color(float r, float g, float b, float a);

113 9 get_color 0 4 130 20 LUISprite::get_color 0 1 52 0
45
inline LVecBase4f LUISprite::get_color(void);

114 11 set_texture 0 4 130 22 LUISprite::set_texture 0 3 53 54 55 22
// Texture

// Texture
189
inline void LUISprite::set_texture(Texture *tex);
inline void LUISprite::set_texture(LUIAtlasDescriptor *descriptor);
inline void LUISprite::set_texture(basic_string< char > const &source);

115 11 get_texture 0 4 130 22 LUISprite::get_texture 0 1 56 0
51
inline Texture *LUISprite::get_texture(void) const;

116 11 set_z_index 0 4 130 22 LUISprite::set_z_index 0 1 57 10
// Z-Index
50
inline void LUISprite::set_z_index(float z_index);

117 11 get_z_index 0 4 130 22 LUISprite::get_z_index 0 1 58 10
// Z-Index
42
inline float LUISprite::get_z_index(void);

118 10 ~LUISprite 0 6 130 21 LUISprite::~LUISprite 0 0 0
36
virtual LUISprite::~LUISprite(void);

119 7 LUIRoot 0 4 131 16 LUIRoot::LUIRoot 0 1 63 0
23
LUIRoot::LUIRoot(void);

120 8 ~LUIRoot 0 4 131 17 LUIRoot::~LUIRoot 0 0 0
24
LUIRoot::~LUIRoot(void);

121 13 attach_sprite 0 4 131 22 LUIRoot::attach_sprite 0 1 64 0
90
PointerTo< LUISprite > LUIRoot::attach_sprite(float x, float y, LUIAtlasDescriptor *desc);

122 11 operator += 0 4 131 20 LUIRoot::operator += 0 1 65 0
53
void LUIRoot::operator +=(PointerTo< LUINode > node);

65
1 14 Dtool_jJ0Ge_HK 0 7 3 132 0 14 Dtool_jJ0Ge_HK 0 0 
2 14 Dtool_jJ0GBOW6 0 6 4 134 0 14 Dtool_jJ0GBOW6 0 2 4 this 3 132  15 descriptor_path 1 133  
3 14 Dtool_jJ0GSx6K 0 6 5 134 0 14 Dtool_jJ0GSx6K 0 2 4 this 3 132  12 texture_path 1 133  
4 14 Dtool_jJ0GBRYx 0 7 6 136 0 14 Dtool_jJ0GBRYx 0 1 4 this 3 132  
5 14 Dtool_jJ0G5TJc 0 6 7 134 0 14 Dtool_jJ0G5TJc 0 2 4 this 3 132  4 name 1 133  
6 14 Dtool_jJ0GcT8z 0 6 8 137 0 14 Dtool_jJ0GcT8z 0 2 4 this 3 132  4 name 1 133  
7 14 Dtool_jJ0Gruc5 0 6 9 139 0 14 Dtool_jJ0Gruc5 0 1 4 this 3 132  
8 14 Dtool_jJ0G8xhK 0 7 11 140 0 14 Dtool_jJ0G8xhK 0 0 
9 14 Dtool_jJ0GL9zA 0 7 13 141 0 14 Dtool_jJ0GL9zA 0 1 4 size 1 139  
10 14 Dtool_jJ0G8x4_ 0 7 14 143 0 14 Dtool_jJ0G8x4_ 0 3 4 this 3 141  1 w 1 139  1 h 1 139  
11 14 Dtool_jJ0GzFLW 0 6 16 144 0 14 Dtool_jJ0GzFLW 0 0 
12 14 Dtool_jJ0Gr0Me 0 4 17 145 0 14 Dtool_jJ0Gr0Me 0 4 4 this 3 144  8 atlas_id 1 133  15 atlas_desc_path 1 133  14 atlas_tex_path 1 133  
13 14 Dtool_jJ0GeRSm 0 6 18 134 0 14 Dtool_jJ0GeRSm 0 2 4 this 3 144  8 atlas_id 1 133  
14 14 Dtool_jJ0GVax7 0 7 19 132 0 14 Dtool_jJ0GVax7 0 2 4 this 3 144  8 atlas_id 1 133  
15 14 Dtool_jJ0G_XMf 0 7 20 140 0 14 Dtool_jJ0G_XMf 0 2 4 this 3 144  8 entry_id 1 133  
16 14 Dtool_jJ0GFBo3 0 7 20 140 0 14 Dtool_jJ0GFBo3 0 3 4 this 3 144  8 atlas_id 1 133  8 entry_id 1 133  
17 14 Dtool_jJ0G3r87 0 4 23 145 0 14 Dtool_jJ0G3r87 11 // Position 3 4 this 3 146  3 top 1 147  4 left 1 147  
18 14 Dtool_jJ0GJq54 0 4 24 145 0 14 Dtool_jJ0GJq54 11 // Position 2 4 this 3 146  3 top 1 147  
19 14 Dtool_jJ0GOvA7 0 4 25 145 0 14 Dtool_jJ0GOvA7 0 2 4 this 3 146  6 bottom 1 147  
20 14 Dtool_jJ0GFILW 0 4 26 145 0 14 Dtool_jJ0GFILW 0 2 4 this 3 146  4 left 1 147  
21 14 Dtool_jJ0GjvYH 0 4 27 145 0 14 Dtool_jJ0GjvYH 0 2 4 this 3 146  5 right 1 147  
22 14 Dtool_jJ0GlPaM 0 4 28 145 0 14 Dtool_jJ0GlPaM 7 // Size 2 4 this 3 146  4 size 1 148  
23 14 Dtool_jJ0Ggvt3 0 4 28 145 0 14 Dtool_jJ0Ggvt3 7 // Size 3 4 this 3 146  1 w 1 147  1 h 1 147  
24 14 Dtool_jJ0G7LWH 0 4 29 145 0 14 Dtool_jJ0G7LWH 0 2 4 this 3 146  1 w 1 147  
25 14 Dtool_jJ0G3fi8 0 4 30 145 0 14 Dtool_jJ0G3fi8 0 2 4 this 3 146  1 h 1 147  
26 14 Dtool_jJ0GS1K0 0 6 31 148 0 14 Dtool_jJ0GS1K0 0 1 4 this 3 150  
27 14 Dtool_jJ0GbS1E 0 4 32 145 0 14 Dtool_jJ0GbS1E 10 // Visible 2 4 this 3 146  7 visible 1 134  
28 14 Dtool_jJ0GsivT 0 6 33 134 0 14 Dtool_jJ0GsivT 10 // Visible 1 4 this 3 146  
29 14 Dtool_jJ0G1Vfu 0 4 34 145 0 14 Dtool_jJ0G1Vfu 0 1 4 this 3 146  
30 14 Dtool_jJ0GaSIV 0 4 35 145 0 14 Dtool_jJ0GaSIV 0 1 4 this 3 146  
31 14 Dtool_jJ0GXrwM 0 7 37 152 0 14 Dtool_jJ0GXrwM 0 2 1 w 1 147  1 h 1 147  
32 14 Dtool_jJ0G0SVM 0 7 38 140 0 14 Dtool_jJ0G0SVM 0 2 4 this 3 152  10 identifier 1 133  
33 14 Dtool_jJ0GqcgU 0 7 38 140 0 14 Dtool_jJ0GqcgU 0 3 4 this 3 152  8 atlas_id 1 133  10 identifier 1 133  
34 14 Dtool_jJ0GdxpG 0 7 39 153 118 14 Dtool_jJ0GdxpG 0 4 4 this 3 152  1 x 1 147  1 y 1 147  4 desc 1 140  
35 14 Dtool_jJ0GYdYP 0 7 39 153 118 14 Dtool_jJ0GYdYP 0 4 4 this 3 152  1 x 1 147  1 y 1 147  3 tex 1 136  
36 14 Dtool_jJ0G4bwZ 0 7 39 153 118 14 Dtool_jJ0G4bwZ 0 4 4 this 3 152  1 x 1 147  1 y 1 147  6 source 1 133  
37 14 Dtool_jJ0GLTFc 0 4 40 145 0 14 Dtool_jJ0GLTFc 0 2 4 this 3 152  6 sprite 1 153  
38 14 Dtool_jJ0GP9Lr 0 6 41 139 0 14 Dtool_jJ0GP9Lr 0 1 4 this 3 152  
39 14 Dtool_jJ0GWZAJ 0 7 42 153 118 14 Dtool_jJ0GWZAJ 0 2 4 this 3 152  1 n 1 139  
40 14 Dtool_jJ0GiBfl 0 6 43 148 0 14 Dtool_jJ0GiBfl 0 1 4 this 3 154  
41 14 Dtool_jJ0GFNRb 0 4 44 145 0 14 Dtool_jJ0GFNRb 0 2 4 this 3 152  4 size 1 148  
42 14 Dtool_jJ0GawIa 0 4 44 145 0 14 Dtool_jJ0GawIa 0 3 4 this 3 152  1 w 1 147  1 h 1 147  
43 14 Dtool_jJ0GKeO5 0 7 45 152 0 14 Dtool_jJ0GKeO5 0 2 4 this 3 152  4 node 1 152  
44 14 Dtool_jJ0GZPqC 0 4 51 145 0 14 Dtool_jJ0GZPqC 11 // Texcoord 2 4 this 3 153  14 texcoord_start 1 148  
45 14 Dtool_jJ0GN_OZ 0 4 51 145 0 14 Dtool_jJ0GN_OZ 11 // Texcoord 3 4 this 3 153  1 u 1 147  1 v 1 147  
46 14 Dtool_jJ0Gmg_s 0 7 52 143 0 14 Dtool_jJ0Gmg_s 0 1 4 this 3 153  
47 14 Dtool_jJ0G1aLq 0 4 53 145 0 14 Dtool_jJ0G1aLq 0 2 4 this 3 153  12 texcoord_end 1 148  
48 14 Dtool_jJ0Gpyol 0 4 53 145 0 14 Dtool_jJ0Gpyol 0 3 4 this 3 153  1 u 1 147  1 v 1 147  
49 14 Dtool_jJ0GbKPb 0 7 54 143 0 14 Dtool_jJ0GbKPb 0 1 4 this 3 153  
50 14 Dtool_jJ0GjsUJ 0 4 55 145 0 14 Dtool_jJ0GjsUJ 8 // Color 2 4 this 3 153  5 color 1 156  
51 14 Dtool_jJ0G0obL 0 4 55 145 0 14 Dtool_jJ0G0obL 8 // Color 5 4 this 3 153  1 r 1 147  1 g 1 147  1 b 1 147  1 a 1 147  
52 14 Dtool_jJ0GZ92J 0 7 56 159 0 14 Dtool_jJ0GZ92J 0 1 4 this 3 153  
53 14 Dtool_jJ0Gk1Cl 0 4 57 145 0 14 Dtool_jJ0Gk1Cl 10 // Texture 2 4 this 3 153  10 descriptor 1 140  
54 14 Dtool_jJ0GBbSG 0 4 57 145 0 14 Dtool_jJ0GBbSG 10 // Texture 2 4 this 3 153  3 tex 1 136  
55 14 Dtool_jJ0GCkWd 0 4 57 145 0 14 Dtool_jJ0GCkWd 0 2 4 this 3 153  6 source 1 133  
56 14 Dtool_jJ0GAHju 0 7 58 136 0 14 Dtool_jJ0GAHju 0 1 4 this 3 160  
57 14 Dtool_jJ0G0CvJ 0 4 59 145 0 14 Dtool_jJ0G0CvJ 10 // Z-Index 2 4 this 3 153  7 z_index 1 147  
58 14 Dtool_jJ0GQj7I 0 6 60 147 0 14 Dtool_jJ0GQj7I 10 // Z-Index 1 4 this 3 153  
59 14 Dtool_jJ0Gnf1S 0 7 47 162 0 14 Dtool_jJ0Gnf1S 0 1 4 this 3 153  
60 14 Dtool_jJ0GwSKi 0 7 48 153 118 14 Dtool_jJ0GwSKi 0 1 4 this 3 162  
61 14 Dtool_jJ0GxUUB 0 6 49 146 0 14 Dtool_jJ0GxUUB 0 1 4 this 3 153  
62 14 Dtool_jJ0G5wYu 0 7 50 153 118 14 Dtool_jJ0G5wYu 0 1 4 this 3 146  
63 14 Dtool_jJ0Gxl7v 0 7 63 163 120 14 Dtool_jJ0Gxl7v 0 0 
64 14 Dtool_jJ0GkP7R 0 7 65 153 118 14 Dtool_jJ0GkP7R 0 4 4 this 3 163  1 x 1 147  1 y 1 147  4 desc 1 140  
65 14 Dtool_jJ0Gs8cP 0 6 66 163 0 14 Dtool_jJ0Gs8cP 0 2 4 this 3 163  4 node 1 152  
42
123 8 LUIAtlas 0 75777 8 LUIAtlas 8 LUIAtlas 0 0 0 1 66 0 0 6 67 68 69 70 71 72 0 0 1 0 124 0 0 0 0 0

124 14 ReferenceCount 0 2049 14 ReferenceCount 14 ReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 425
////////////////////////////////////////////////////////////////////
//       Class : ReferenceCount
// Description : A base class for all things that want to be
//               reference-counted.  ReferenceCount works in
//               conjunction with PointerTo to automatically delete
//               objects when the last pointer to them goes away.
////////////////////////////////////////////////////////////////////

125 18 LUIAtlasDescriptor 0 75777 18 LUIAtlasDescriptor 18 LUIAtlasDescriptor 0 0 0 1 73 0 0 0 0 0 1 0 124 0 0 0 0 0

126 14 LUIAtlasPacker 0 75777 14 LUIAtlasPacker 14 LUIAtlasPacker 0 0 0 1 74 0 0 1 75 0 0 1 0 124 0 0 0 0 0

127 12 LUIAtlasPool 0 43009 12 LUIAtlasPool 12 LUIAtlasPool 0 0 0 0 0 0 5 76 77 78 79 80 0 0 0 0 0 0

128 14 LUIBaseElement 0 26625 14 LUIBaseElement 14 LUIBaseElement 0 0 0 0 81 0 13 82 83 84 85 86 87 88 89 90 91 92 93 94 0 0 0 0 0 0

129 7 LUINode 0 75777 7 LUINode 7 LUINode 0 0 0 1 95 0 0 8 96 97 98 99 100 101 102 103 0 0 1 0 124 0 0 0 0 0

130 9 LUISprite 0 26625 9 LUISprite 9 LUISprite 0 0 0 0 118 0 10 108 109 110 111 112 113 114 115 116 117 0 0 2 3 124 104 105 3 128 106 107 0 0 371
////////////////////////////////////////////////////////////////////
//       Class : LUISprite
// Description : A LUISprite stores a single card, including position,
//               scale, and uv coordinates. It also notifies the
//               LUIVertexPool when any scalar or texture got changed.
////////////////////////////////////////////////////////////////////

131 7 LUIRoot 0 26625 7 LUIRoot 7 LUIRoot 0 0 0 1 119 120 0 2 121 122 0 0 0 0 0 0

132 10 LUIAtlas * 0 8576 10 LUIAtlas * 10 LUIAtlas * 0 0 123 0 0 0 0 0 0 0 0 0 0

133 13 atomic string 0 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

134 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

135 7 Texture 0 2048 7 Texture 7 Texture 0 0 0 0 0 0 0 0 0 0 0 0 1051
////////////////////////////////////////////////////////////////////
//       Class : Texture
// Description : Represents a texture object, which is typically a
//               single 2-d image but may also represent a 1-d or 3-d
//               texture image, or the six 2-d faces of a cube map
//               texture.
//
//               A texture's image data might be stored in system RAM
//               (see get_ram_image()) or its image may be represented
//               in texture memory on one or more
//               GraphicsStateGuardians (see prepare()), or both.  The
//               typical usage pattern is that a texture is loaded
//               from an image file on disk, which copies its image
//               data into system RAM; then the first time the texture
//               is rendered its image data is copied to texture
//               memory (actually, to the graphics API), and the
//               system RAM image is automatically freed.
////////////////////////////////////////////////////////////////////

136 9 Texture * 0 8576 9 Texture * 9 Texture * 0 0 135 0 0 0 0 0 0 0 0 0 0

137 15 LUIAtlasEntry * 0 8576 15 LUIAtlasEntry * 15 LUIAtlasEntry * 0 0 138 0 0 0 0 0 0 0 0 0 0

138 13 LUIAtlasEntry 0 1049600 13 LUIAtlasEntry 13 LUIAtlasEntry 0 0 0 0 0 0 0 0 0 0 0 0 0

139 3 int 0 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

140 20 LUIAtlasDescriptor * 0 8576 20 LUIAtlasDescriptor * 20 LUIAtlasDescriptor * 0 0 125 0 0 0 0 0 0 0 0 0 0

141 16 LUIAtlasPacker * 0 8576 16 LUIAtlasPacker * 16 LUIAtlasPacker * 0 0 126 0 0 0 0 0 0 0 0 0 0

142 9 LVector2f 0 2048 9 LVector2f 9 LVector2f 0 0 0 0 0 0 0 0 0 0 0 0 707
// Filename: lvector2_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVector2
// Description : This is a two-component vector offset.
////////////////////////////////////////////////////////////////////

143 11 LVector2f * 0 8576 11 LVector2f * 11 LVector2f * 0 0 142 0 0 0 0 0 0 0 0 0 0

144 14 LUIAtlasPool * 0 8576 14 LUIAtlasPool * 14 LUIAtlasPool * 0 0 127 0 0 0 0 0 0 0 0 0 0

145 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

146 16 LUIBaseElement * 0 8576 16 LUIBaseElement * 16 LUIBaseElement * 0 0 128 0 0 0 0 0 0 0 0 0 0

147 5 float 0 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

148 17 LVector2f const * 0 8576 17 LVector2f const * 17 LVector2f const * 0 0 149 0 0 0 0 0 0 0 0 0 0

149 15 LVector2f const 0 8832 15 LVector2f const 15 LVector2f const 0 0 142 0 0 0 0 0 0 0 0 0 0

150 22 LUIBaseElement const * 0 8576 22 LUIBaseElement const * 22 LUIBaseElement const * 0 0 151 0 0 0 0 0 0 0 0 0 0

151 20 LUIBaseElement const 0 8832 20 LUIBaseElement const 20 LUIBaseElement const 0 0 128 0 0 0 0 0 0 0 0 0 0

152 9 LUINode * 0 8576 9 LUINode * 9 LUINode * 0 0 129 0 0 0 0 0 0 0 0 0 0

153 11 LUISprite * 0 8576 11 LUISprite * 11 LUISprite * 0 0 130 0 0 0 0 0 0 0 0 0 0

154 15 LUINode const * 0 8576 15 LUINode const * 15 LUINode const * 0 0 155 0 0 0 0 0 0 0 0 0 0

155 13 LUINode const 0 8832 13 LUINode const 13 LUINode const 0 0 129 0 0 0 0 0 0 0 0 0 0

156 18 LVecBase4f const * 0 8576 18 LVecBase4f const * 18 LVecBase4f const * 0 0 157 0 0 0 0 0 0 0 0 0 0

157 16 LVecBase4f const 0 8832 16 LVecBase4f const 16 LVecBase4f const 0 0 158 0 0 0 0 0 0 0 0 0 0

158 10 LVecBase4f 0 2048 10 LVecBase4f 10 LVecBase4f 0 0 0 0 0 0 0 0 0 0 0 0 265
////////////////////////////////////////////////////////////////////
//       Class : LVecBase4
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

159 12 LVecBase4f * 0 8576 12 LVecBase4f * 12 LVecBase4f * 0 0 158 0 0 0 0 0 0 0 0 0 0

160 17 LUISprite const * 0 8576 17 LUISprite const * 17 LUISprite const * 0 0 161 0 0 0 0 0 0 0 0 0 0

161 15 LUISprite const 0 8832 15 LUISprite const 15 LUISprite const 0 0 130 0 0 0 0 0 0 0 0 0 0

162 16 ReferenceCount * 0 8576 16 ReferenceCount * 16 ReferenceCount * 0 0 124 0 0 0 0 0 0 0 0 0 0

163 9 LUIRoot * 0 8576 9 LUIRoot * 9 LUIRoot * 0 0 131 0 0 0 0 0 0 0 0 0 0

164 6 string 0 2048 20 basic_string< char > 20 basic_string< char > 0 0 0 0 0 0 0 0 0 0 0 0 0

0
0
0
